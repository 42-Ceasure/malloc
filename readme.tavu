what is this project ?

	This is a project from school, the goal is to implement malloc.
	There was no language requirements, but that sound legit for me
	to implement it in C.

For moment, it is based on a hard coded "heap".

"heap"
	is initialised with an 8 byte header and an 8 bytes
	footer which represents a size_t of 8 bytes.
	The number is multiple of 16 and so the 61 most signifiant bits
	represent the size of the chunk, while the 1 less signifiant bit 
	represents the status (used or free) of the chunck

"mymalloc"
	allocate requested memory on the "heap"
	it searches for a large enough free chunk set its header and
	footer, and split the chunk if it's size exceed the required size

"myfree"
	dealocate the chunck and merge it with the next chunk if it's
	free, then do the same with the previous chunk

"dump_heap"
	prints the actual state of the heap, listing chunks.

to do next:

	test realloc
		- reallocate more elsewhere should check the prev chunk,
		if it's free and large enough, it can merge it then move mem

	find
	- implement find next fit
	- implement find best fit
	- implement find ...


	mmap
	- implement usage of mmap
	I need to find a way to create one or more base heap,
	accessible nearly everywhere in functions. Then use them as before.
	I should :
		- be able to find all memory system gave me
		- find if there's a way to keep my block architecture as it
		in combination with pages (btw there's a will)
		- maybe global struct of few pointers ??


	- implement usage of munmap
	
	munmap
	sysconf
	getrlimit
